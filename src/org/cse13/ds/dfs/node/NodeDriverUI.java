/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.cse13.ds.dfs.node;

import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.cse13.ds.dfs.server.BootstrapServer;

/**
 *
 * @author kjtdi
 */
public class NodeDriverUI extends javax.swing.JFrame {

    private Node n1;
    private long startTime;
    private long endTime;

    /**
     * Creates new form NodeDriverUI
     */
    public NodeDriverUI() {
        initComponents();
    }

    public void setSearchResults(ArrayList<String[]> searchResults) {
        endTime = System.nanoTime() - startTime;
        System.out.println(startTime + " " + System.currentTimeMillis());
        elapsedTimeLabel.setText(String.valueOf(endTime));
        //display results
        DefaultTableModel dtm = new DefaultTableModel(0, 0);
        String header[] = new String[]{"File Names", "Owner IP", "Owner Port"};
        dtm.setColumnIdentifiers(header);
        resultsFilesTable.setModel(dtm);

        for (String[] result : searchResults) {
            dtm.addRow(new String[]{result[0], result[1], result[2]});
        }
    }

    //display my ip and port
    public void setMyDetails(String ip, String port) {
        myIPLabel.setText(ip);
        myPort.setText(port);
    }

    //display my neighbours
    public void setMyNeighboursDetails(String ip, String port) {
        DefaultTableModel dtm = (DefaultTableModel) myNeighboursTable.getModel();
        int currentRowCount = dtm.getRowCount();
        if(currentRowCount<3) {
            dtm.addRow(new String[]{"Neighbour " + (currentRowCount + 1), ip, port});
        }
        
    }

    //show message
    public void showMessage() {
        NodeDriverUI ui = this;
        new Thread(new Runnable() {

            @Override
            public void run() {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(ui, "File Not Found. Do you want to search again?", "File Not Found", dialogButton);
                if (dialogResult == 0) {
                    startTime = System.nanoTime();
                    n1.searchInUI(searchBox.getText());
                } else {
                    System.out.println("No Option");
                }
                
            }
        }).start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        searchBox = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        initFilesTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultsFilesTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        elapsedTimeLabel = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        myPort = new javax.swing.JLabel();
        myIPLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        myNeighboursTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        terminalText = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Distributed p2p filesystem");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Start Node");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 100, 32));

        jButton2.setText("Start BS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 100, 32));

        searchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchBoxKeyReleased(evt);
            }
        });
        jPanel1.add(searchBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 510, 30));

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 70, 510, 30));

        initFilesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "Owner IP", "Owner Port"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(initFilesTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 650, 130));

        resultsFilesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "Path"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(resultsFilesTable);

        jPanel1.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 650, 130));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Elapsed Time: ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));
        jPanel1.add(elapsedTimeLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 110, 30));
        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        jTabbedPane2.addTab("Search File", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("My Port : ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("My Neighbours");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));
        jPanel2.add(myPort, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, 130, 20));
        jPanel2.add(myIPLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 130, 20));

        myNeighboursTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Neighbour", "IP", "Port"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(myNeighboursTable);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 650, 110));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("My IP : ");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));
        jPanel2.add(terminalText, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 424, 620, 20));

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jTabbedPane2.addTab("Network Details", jPanel2);

        getContentPane().add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 700, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            n1 = new Node("127.0.0.1", "n1", this);

            n1.start();

            //starting listening to keyboard input from a seperate thread
            Thread stdReadThread = new Thread(new Runnable() {
                public void run() {
                    System.out.println("std listener started...");
                    n1.readStdin();
                }
            });
            

            //display file names
            ArrayList<String> keysAsArray = new ArrayList<String>(n1.getFilesToStore().keySet());
            DefaultTableModel dtm = new DefaultTableModel(0, 0);
            String header[] = new String[]{"File Names", "File Paths"};
            dtm.setColumnIdentifiers(header);
            initFilesTable.setModel(dtm);

            for (String files : keysAsArray) {
                dtm.addRow(new String[]{files, n1.getFilesToStore().get(files).getPath()});
            }

            stdReadThread.start();        // TODO add your handling code here:
        } catch (RemoteException ex) {
            Logger.getLogger(NodeDriverUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(NodeDriverUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (MalformedURLException ex) {
            Logger.getLogger(NodeDriverUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(NodeDriverUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        BootstrapServer bs1 = new BootstrapServer();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        startTime = System.nanoTime();
        n1.searchInUI(searchBox.getText());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void searchBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBoxKeyReleased

    }//GEN-LAST:event_searchBoxKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        n1.printNeighbours();
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NodeDriverUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NodeDriverUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NodeDriverUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NodeDriverUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NodeDriverUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel elapsedTimeLabel;
    private javax.swing.JTable initFilesTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel myIPLabel;
    private javax.swing.JTable myNeighboursTable;
    private javax.swing.JLabel myPort;
    private javax.swing.JTable resultsFilesTable;
    private javax.swing.JTextField searchBox;
    private javax.swing.JLabel terminalText;
    // End of variables declaration//GEN-END:variables
}
